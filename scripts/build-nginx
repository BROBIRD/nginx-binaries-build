#!/bin/sh
set -eu

glob_dir() {
	local glob="$1"
	local dir

	if ! dir=$(ls -xd $1/ 2>/dev/null); then
		echo "ERROR: Did not find directory matching: $glob" >&2
		return 1
	elif [ "${dir#* }" != "$dir" ]; then
		echo "ERROR: Found more than one directory matching: $glob" >&2
		return 1
	else
		echo "${dir%/}"
	fi
}

add_module() {
	local dir name

	for name in "$@"; do
		dir=$(glob_dir "${name#*/}-[0-9]*") || return 1

		case "$name" in
			nginx/njs) dir="$dir/nginx";;
		esac
		printf -- '--add-module=%s\n' "$dir"
	done
}

configure() {
	set -x  # log commands

	./auto/configure \
		--prefix="." \
		--sbin-path="nginx" \
		--conf-path="nginx.conf" \
		--pid-path="nginx.pid" \
		--lock-path="nginx.lock" \
		--error-log-path=stderr \
		--http-log-path=access.log \
		--http-client-body-temp-path="client_body_temp" \
		--http-proxy-temp-path="proxy_temp" \
		--user=nginx \
		--group=nginx \
		--with-cc="${CC:-cc}" \
		--with-cc-opt="${CFLAGS:-}" \
		--with-ld-opt="${LDFLAGS:-}" \
		--with-debug \
		--with-http_ssl_module \
		--with-http_v2_module \
		--with-http_realip_module \
		--with-http_auth_request_module \
		--with-http_secure_link_module \
		--without-http_ssi_module \
		--without-http_mirror_module \
		--without-http_geo_module \
		--without-http_split_clients_module \
		--without-http_fastcgi_module \
		--without-http_uwsgi_module \
		--without-http_scgi_module \
		--without-http_grpc_module \
		--without-http_memcached_module \
		"$@"
}


NGINX_VERSION=$(sed -En 's|.* ([^ ]*) nginx$|\1|p;q' .SOURCES)
HOST_ARCH=$(uname -m)
HOST_OS=$(uname -s | tr '[A-Z]' '[a-z]')
EXEEXT=''

case "$HOST_OS" in
	darwin) alias sha1sum='shasum -a1';;
	mingw*) HOST_OS='win32'; EXEEXT='.exe';;
esac

uname -a

module_flags=$(add_module $NGINX_MODULES)

case "$HOST_OS" in
	linux)
		configure --with-file-aio --with-threads $module_flags
	;;
	darwin)
		configure --with-threads $module_flags
	;;
	win32)
		openssl_dir=$(glob_dir 'openssl-[0-9]*')
		pcre_dir=$(glob_dir 'pcre-[0-9]*')
		zlib_dir=$(glob_dir 'zlib-[0-9]*')

		configure \
			--with-openssl="$openssl_dir" \
			--with-pcre="$pcre_dir" \
			--with-zlib="$zlib_dir" \
			--with-openssl-opt='no-asm no-tests -D_WIN32_WINNT=0x0501' \
			$module_flags
	;;
esac

make

ls -lah objs
strip objs/nginx$EXEEXT
file objs/nginx$EXEEXT

case "$HOST_OS" in
	darwin) otool -L objs/nginx$EXEEXT;;
	*) ldd objs/nginx$EXEEXT;;
esac

./objs/nginx$EXEEXT -V

BIN_NAME="nginx-${NGINX_VERSION}-${HOST_ARCH}-${HOST_OS}${EXEEXT}"

mkdir -p artifact/
install objs/nginx$EXEEXT artifact/$BIN_NAME
mv .SOURCES artifact/$BIN_NAME.sources

cd artifact/
sha1sum $BIN_NAME > $BIN_NAME.sha1
