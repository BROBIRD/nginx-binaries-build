#!/bin/sh
set -eu

scrape_latest_version() {
	local url=$1
	local pattern="s/.*$2.*/\1/p"
	local name=$3
	local ver

	if ver=$(curl -sS "$url" | sed -En "$pattern" | sort -ruV | head -1) && [ "$ver" ]; then
		echo "Found $name latest version: $ver" >&2
		echo "$ver"
	else
		echo "ERROR: Failed to find $name latest version" >&2
		return 1
	fi
}

github_latest_version_tag() {
	local repo_slug="$1"
	local tags_url="https://api.github.com/repos/$repo_slug/tags"
	local filter='. | map(.name | select(test("^v?\\d+(\\.\\d+)+$"))) | max_by(sub("^v"; "") | split(".") | map(tonumber))'
	local tag

	if tag=$(curl -sS "$tags_url" | jq -er "$filter") && [ "$tag" ]; then
		echo "Found ${repo_slug#*/} latest version tag: $tag" >&2
		echo "$tag"
	else
		echo "ERROR: Failed to find $repo_slug latest version tag" >&2
		return 1
	fi
}

screaming_case() {
	echo "$1" | tr '[a-z]-' '[A-Z]_'
}

download_tar() {
	local url="$1"
	local filename=$(basename "$url")

	echo "Downloading $url" >&2
	wget -c -nv "$url"
	tar -xf "$filename"
}


if [ $# -lt 1 ] || [ "$1" = '--help' ]; then
	echo "Usage: $0 <proj-name> [<proj-name>...]" >&2
	exit 2
fi

for name in "$@"; do
	case "$name" in
		openssl)
			url='https://www.openssl.org/source'
			ver=$(scrape_latest_version "$url/" 'openssl-(1(\.[0-9]+)+[a-z]+)\.' 'openssl')
			download_tar "$url/$name-$ver.tar.gz"
		;;
		pcre)
			url='https://ftp.pcre.org/pub/pcre'
			ver=$(scrape_latest_version "$url/" 'pcre-(([0-9]+\.)+[0-9]+)\.' 'pcre')
			download_tar "$url/$name-$ver.tar.bz2"
		;;
		zlib)
			url='https://zlib.net'
			ver=$(scrape_latest_version "$url/" 'zlib-(([0-9]+\.)+[0-9]+)\.' 'zlib')
			download_tar "$url/$name-$ver.tar.xz"
		;;
		*)
			tag=$(github_latest_version_tag "$name")
			ver=${tag#v}
			download_tar "https://github.com/$name/archive/$tag/${name#*/}-$ver.tar.gz"
		;;
	esac

	name=${name#*/}
	var_prefix=$(screaming_case "$name")

	echo "${var_prefix}_DIR=$name-$ver"
	echo "${var_prefix}_VERSION=$ver"
done
