#!/bin/sh
set -eu

if ( set -o pipefail 2>/dev/null ); then
	set -o pipefail
else
	# dash shell (/bin/sh on Ubuntu) does not support pipefail.
	exec bash "$0" "$@"
fi

case "$(uname -s)" in
	Darwin) filesize() { stat -f %z "$@"; };;
	*) filesize() { stat -c %s "$@"; };;
esac

scrape_latest_version() {
	local url=$1
	local pattern="s/.*$2.*/\1/p"
	local name=$3
	local ver

	if ver=$(curl -fsS --retry 3 "$url" | sed -En "$pattern" | sort -ruV | head -1) && [ "$ver" ]; then
		echo "$ver"
	else
		echo "ERROR: Failed to find $name latest version" >&2
		return 1
	fi
}

github_latest_version_tag() {
	local repo_slug="$1"
	local tags_url="https://api.github.com/repos/$repo_slug/tags"
	local tag

	local jq_filter_tags='. | map(.name | select(test("^v?\\d+(\\.\\d+)+$")))'
	local jq_latest='max_by(sub("^v"; "") | split(".") | map(tonumber))'

	# XXX: Hack for https://github.com/openresty/headers-more-nginx-module/issues/117.
	if [ "$repo_slug" = 'openresty/headers-more-nginx-module' ]; then
		jq_filter_tags="$jq_filter_tags - [\"v0.261\"]"
	fi

	if tag=$(github_curl "$tags_url" | jq -er "$jq_filter_tags | $jq_latest") && [ "$tag" ]; then
		echo "$tag"
	else
		echo "ERROR: Failed to find $repo_slug latest version tag" >&2
		return 1
	fi
}

github_curl() {
	# Authenticate GitHub requests to avoid rate limits.
	curl -fsS \
		--retry 3 \
		--header 'Accept: application/vnd.github.v3+json' \
		${GITHUB_TOKEN:+--header "Authorization: Bearer $GITHUB_TOKEN"} \
		"$@"
}

checksum() {
	local filename="$1"

	local sha256sum='sha256sum'
	command -v sha256sum >/dev/null || sha256sum='shasum -a 256'

	$sha256sum "$filename" | cut -d' ' -f1
}


if [ $# -lt 1 ] || [ "$1" = '--help' ]; then
	echo "Usage: $0 <proj-name> [<proj-name>...]" >&2
	exit 2
fi

for name in "$@"; do
	case "$name" in
		openssl)
			base_url='https://www.openssl.org/source'
			ver=$(scrape_latest_version "$base_url/" 'openssl-(1(\.[0-9]+)+[a-z]+)\.' 'openssl')
			url="$base_url/$name-$ver.tar.gz"
		;;
		pcre)
			base_url='https://ftp.pcre.org/pub/pcre'
			ver=$(scrape_latest_version "$base_url/" 'pcre-(([0-9]+\.)+[0-9]+)\.' 'pcre')
			url="$base_url/$name-$ver.tar.bz2"
		;;
		zlib)
			base_url='https://zlib.net'
			ver=$(scrape_latest_version "$base_url/" 'zlib-(([0-9]+\.)+[0-9]+)\.' 'zlib')
			url="$base_url/$name-$ver.tar.xz"
		;;
		*)
			tag=$(github_latest_version_tag "$name")
			ver=${tag#v}
			url="https://github.com/$name/archive/$tag/${name#*/}-$ver.tar.gz"
		;;
	esac

	filename=$(basename "$url")

	echo "Downloading $url" >&2
	curl -L --retry 3 -o "$filename" "$url"
	tar -xf "$filename"

	size=$(filesize "$filename")
	hash=$(checksum "$filename")
	echo "$url $size $hash $ver ${name#*/}" | tee -a .SOURCES
done
