#!/bin/sh
set -eu

scrape_latest_version() {
	local url=$1
	local pattern="s/.*$2.*/\1/p"
	local name=$3
	local ver

	if ver=$(curl -sS "$url" | sed -En "$pattern" | sort -ruV | head -1) && [ "$ver" ]; then
		echo "Found $name latest version: $ver" >&2
		echo "$ver"
	else
		echo "ERROR: Failed to find $name latest version" >&2
		return 1
	fi
}

upcase() {
	echo "$1" | tr '[a-z]' '[A-Z]'
}

download_tar() {
	local url="$1"
	local name=$(basename "$url")

	echo "Downloading $url" >&2
	wget -c -nv "$url"
	tar -xf "$name"
	echo "$(upcase "$NAME")_DIR=${name%.tar.*}"
}


if [ $# -ne 1 ] || [ "$1" = '--help' ]; then
	echo "Usage: $0 <openssl | pcre | zlib>" >&2
	exit 2
fi

NAME="$1"

case "$NAME" in
	openssl)
		url='https://www.openssl.org/source'
		ver=$(scrape_latest_version "$url/" 'openssl-(1(\.[0-9]+)+[a-z]+)\.' 'openssl')
		download_tar "$url/$NAME-$ver.tar.gz"
	;;
	pcre)
		url='https://ftp.pcre.org/pub/pcre'
		ver=$(scrape_latest_version "$url/" 'pcre-(([0-9]+\.)+[0-9]+)\.' 'pcre')
		download_tar "$url/$NAME-$ver.tar.bz2"
	;;
	zlib)
		url='https://zlib.net'
		ver=$(scrape_latest_version "$url/" 'zlib-(([0-9]+\.)+[0-9]+)\.' 'zlib')
		download_tar "$url/$NAME-$ver.tar.xz"
	;;
	*)
		echo "Unknown name: $1" >&2
		exit 2
	;;
esac
