name: binaries
on:
  push: {}
  schedule:
    - cron:  '0 0 * * 0'  # run each Sunday

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JOBS: 3
  CFLAGS: -Os -fomit-frame-pointer -pipe
  LINUX_LDFLAGS: -static -Wl,--as-needed
  # Versions of nginx modules
  NJS_VERSION: 0.5.0
  NGX_DEVEL_KIT_VERSION: 0.3.1
  ECHO_MODULE_VERSION: 0.62
  HEADERS_MORE_MODULE_VERSION: 0.33
  SET_MISC_MODULE_VERSION: 0.32

jobs:
  nginx-msvc-x86_64-win32:
    name: nginx-${{ matrix.NGINX_VERSION }}-msvc-x86_64-win32
    runs-on: windows-latest
    strategy:
      matrix:
        NGINX_VERSION:
          #- 1.18.0
          - 1.19.5
    steps:
      - name: Checkout nginx repository
        uses: actions/checkout@v2
        with:
          repository: nginx/nginx
          ref: release-${{ matrix.NGINX_VERSION }}

      - name: Checkout njs repository
        uses: actions/checkout@v2
        with:
          repository: nginx/njs
          ref: ${{ env.NJS_VERSION }}
          path: njs-${{ env.NJS_VERSION }}

      - name: Checkout ngx_devel_kit repository
        uses: actions/checkout@v2
        with:
          repository: simpl/ngx_devel_kit
          ref: v${{ env.NGX_DEVEL_KIT_VERSION }}
          path: ngx_devel_kit-${{ env.NGX_DEVEL_KIT_VERSION }}

      - name: Checkout echo-nginx-module repository
        uses: actions/checkout@v2
        with:
          repository: openresty/echo-nginx-module
          ref: v${{ env.ECHO_MODULE_VERSION }}
          path: echo-nginx-module-${{ env.ECHO_MODULE_VERSION }}

      - name: Checkout headers-more-nginx-module repository
        uses: actions/checkout@v2
        with:
          repository: openresty/headers-more-nginx-module
          ref: v${{ env.HEADERS_MORE_MODULE_VERSION }}
          path: headers-more-nginx-module-${{ env.HEADERS_MORE_MODULE_VERSION }}

      - name: Checkout set-misc-nginx-module repository
        uses: actions/checkout@v2
        with:
          repository: openresty/set-misc-nginx-module
          ref: v${{ env.SET_MISC_MODULE_VERSION }}
          path: set-misc-nginx-module-${{ env.SET_MISC_MODULE_VERSION }}

      - name: Checkout myfreeer/nginx-build-msys2
        uses: actions/checkout@v2
        with:
          repository: myfreeer/nginx-build-msys2
          ref: ${{ matrix.NGINX_VERSION }}
          path: msys2

      - name: Checkout master branch
        uses: actions/checkout@v2
        with:
          path: master

      - name: Setup MSYS2 and install tools
        uses: msys2/setup-msys2@v2
        with:
          install: file grep patch sed tar wget

      - name: Setup Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      # perl.exe and link.exe from MSYS2 doesn't work here, we need to use
      # '/c/Strawberry/perl/bin/perl' and '/c/Program Files (x86)/Microsoft Visual Studio/..../bin/HostX64/x64/link'.
      # Manipulating with PATH didn't work, so we just remove these MSYS2 bins.
      # See https://stackoverflow.com/a/22649559/2217862.
      - name: Fix build environment
        run: |
          bash -c 'rm -f /usr/bin/link.exe /usr/bin/perl.exe'
          bash -c 'which link; which perl'

      - name: Download dependencies
        shell: msys2 {0}
        run: |
          ./master/scripts/fetch-sources openssl | tee -a $GITHUB_ENV
          ./master/scripts/fetch-sources pcre | tee -a $GITHUB_ENV
          ./master/scripts/fetch-sources zlib | tee -a $GITHUB_ENV

      - name: Apply patches
        shell: msys2 {0}
        run: |
          for i in msys2/nginx-*.patch; do
            patch -p1 < $i
          done
          # Load auto/cc/msvc even when custom CFLAGS are provided.
          #sed -i 's/^if test -n "$CFLAGS";/if false;/' auto/cc/conf
          sed -i \
            -e 's|$CFLAGS -O2|$CFLAGS /O1 -DFD_SETSIZE=1024|' \
            -e 's/^if \[ -z "$NGX_WINE" \];/if false;/' \
            -e '/CFLAGS="$CFLAGS -WX"/d' \
            -e '/^CORE_DEPS=/d;/^[A-Z]_PCH/d;/ngx_pch.obj/d' \
            auto/cc/msvc
          sed -i \
            -e 's/\bVC-WIN32\b/VC-WIN64A/' \
            auto/lib/openssl/makefile.msvc

      - name: Build nginx
        env:
          NGINX_VERSION: ${{ matrix.NGINX_VERSION }}
          CFLAGS: ''
          CC: cl
        run: bash ./master/scripts/build-nginx

      - name: Upload nginx binary to artifacts
        uses: actions/upload-artifact@v2
        with:
          path: artifact/*
